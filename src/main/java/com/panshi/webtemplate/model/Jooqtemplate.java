/*
 * This file is generated by jOOQ.
*/
package com.panshi.webtemplate.model;


import com.panshi.webtemplate.model.tables.Author;
import com.panshi.webtemplate.model.tables.AuthorMappingBook;
import com.panshi.webtemplate.model.tables.Book;
import com.panshi.webtemplate.model.tables.Comments;
import com.panshi.webtemplate.model.tables.Posts;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Jooqtemplate extends SchemaImpl {

    private static final long serialVersionUID = -686038479;

    /**
     * The reference instance of <code>jooqtemplate</code>
     */
    public static final Jooqtemplate JOOQTEMPLATE = new Jooqtemplate();

    /**
     * The table <code>jooqtemplate.author</code>.
     */
    public final Author AUTHOR = com.panshi.webtemplate.model.tables.Author.AUTHOR;

    /**
     * The table <code>jooqtemplate.author_mapping_book</code>.
     */
    public final AuthorMappingBook AUTHOR_MAPPING_BOOK = com.panshi.webtemplate.model.tables.AuthorMappingBook.AUTHOR_MAPPING_BOOK;

    /**
     * book table
     */
    public final Book BOOK = com.panshi.webtemplate.model.tables.Book.BOOK;

    /**
     * The table <code>jooqtemplate.comments</code>.
     */
    public final Comments COMMENTS = com.panshi.webtemplate.model.tables.Comments.COMMENTS;

    /**
     * The table <code>jooqtemplate.posts</code>.
     */
    public final Posts POSTS = com.panshi.webtemplate.model.tables.Posts.POSTS;

    /**
     * No further instances allowed
     */
    private Jooqtemplate() {
        super("jooqtemplate", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            Author.AUTHOR,
            AuthorMappingBook.AUTHOR_MAPPING_BOOK,
            Book.BOOK,
            Comments.COMMENTS,
            Posts.POSTS);
    }
}
